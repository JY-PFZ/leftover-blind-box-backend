name: Spring Boot CI/CD with SAST + Docker Hub (Port 10015)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  APP_PORT: 10015
  DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/magic-bag-mono
  TARGET_URL: http://${{ secrets.EC2_HOST }}:${{ env.APP_PORT }}

jobs:
  ci:
    name: Build, Test & SAST
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ⚙️ Setup JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Run tests & generate JaCoCo report
        run: mvn -B verify

      - name: 🔍 SAST-SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn sonar:sonar \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml

      - name: 🚪 Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image (linux/amd64)
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:latest

  deploy:
    name: Deploy to EC2
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - name: 📡 Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # 登录 Docker Hub（拉取私有镜像需要）
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
            # 停止并移除旧容器
            docker stop magic-app || true
            docker rm magic-app || true
            # 拉取最新镜像并运行
            docker pull ${{ env.DOCKER_IMAGE }}:latest
            docker run -d \
              --name magic-app \
              -p ${{ env.APP_PORT }}:${{ env.APP_PORT }} \
              ${{ env.DOCKER_IMAGE }}:latest

  dast:
    name: DAST - OWASP ZAP Scan
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: ⏳ Wait for app to start
        run: sleep 45

      - name: 🕸️ Run ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.13.0
        with:
          target: ${{ env.TARGET_URL }}
          cmd_options: "-t 600"
        continue-on-error: true

      - name: Fail on high/critical issues
        if: always()
        run: |
          if [ -f ./zap_report.json ]; then
            issues=$(jq '.site[].alerts[] | select(.riskcode >= 2)' ./zap_report.json | wc -l)
            if [ "$issues" -gt 0 ]; then
              echo "🚨 DAST failed: $issues high/critical vulnerabilities"
              exit 1
            fi
          fi
          echo "✅ DAST passed."